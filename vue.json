{
  // Place your snippets for vue here. Each snippet is defined under a snippet name and has a prefix, body and 
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Print to console": {
    "prefix": "vue3",
    "body": [
      "<!-- $0 -->",
      "<template>",
      "  <div  class='main' v-showLoading></div>",
      "</template>",
      "",
      "<script>",
      "import { reactive,ref,watch,} from 'vue'",
      "export default {",
      "    props: {},",
      "    name: '',",
      "    components:{},",
      "      setup() {",
      "          const refData = ref();",
      "          return {",
      "              ...refData,",
      "          }",
      "",
      "      }",
      "  };",
      "</script>",
      "<style lang='less' scoped>",
      ".main {   ",
      " padding: 0px 16px 16px;",
      " height: calc(100vh - 46px);",
      "  .main_content {",
      "   display: flex;",
      "   height: calc(100vh - 100px);",
      "   }",
      " }",
      "</style>"
    ],
    "description": "Log output to console"
  },
  "Print to console1": {
    "prefix": "vuekk",
    "body": [
      "<!-- $0 -->",
      "<template>",
      "  <div class='main' v-showLoading>",
      "  <do-title :activeStepArr=\"['应用配置', '远程参数配置']\"></do-title>",
      " <div class='main_content'>",
      "  <BackTitle",
      " title='远程参数配置'",
      " @routerReturn='routerReturn'",
      " :showBackIcon='false'>",
      " </BackTitle>",
      "  <div class='main_content_chart'></div>",
      "  </div>",
      "  </div>",
      "</template>",
      "  <script>",
      "import BackTitle from \"../common-comp/BackTitle.vue\";",
      "import DoTitle from \"../common-comp/DoTitle.vue\";",
      "import { onMounted, computed, inject} from \"vue\";",
      "//import SvgIcon from \"@/components/SvgIcon\";",
      "import { useRoute} from \"vue-router\";",
      "import store from \"@/store/index\";",
      "export default {",
      "props: {},",
      "name: \"\",",
      "components: { DoTitle, BackTitle",
      "//SvgIcon",
      "},",
      "setup() {",
      "onMounted(() => {console.log(route);});",
      "const mainAppRouter = inject(\"mainAppRouter\");",
      "const route = useRoute();",
      "const userId = computed(() => {return store.state.login.userInfo.id;});",
      "const projectId = computed(() => {return store.state.common.projectId;});",
      "const dbtId = computed(() => {return store.state.common.dbtId;});",
      "const userName = computed(() => {return store.state.login.userInfo.username;});",
      "const routerReturn = () => {console.log(\"routerReturn\");};",
      "return {",
      " route,",
      "routerReturn,",
      " userId,",
      " projectId,",
      "dbtId,",
      "  userName,",
      " mainAppRouter,",
      " };",
      " },",
      "  };",
      " </script>",
      "  <style lang='less' scoped>",
      ".main {",
      " padding: 0px 16px 16px;",
      " height: calc(100vh - 46px);",
      " .main_content {",
      "  display: flex;",
      "height: calc(100vh - 100px);",
      " flex-direction: column;",
      "  border-radius: 10px;",
      "  background: #ffffff;",
      " box-shadow: 0px 2px 16px rgba(0,0,0,0.1);",
      "}",
      "  .top_content_title {",
      " padding: 16px 24px;",
      " height: 60px;",
      " border-bottom: 1px solid rgba(232,232,232,1);",
      " user-select: none;",
      "display: flex;",
      " justify-content: space-between;",
      " align-items: center;",
      " }",
      ".use_text {",
      "  width: 109px;",
      " height: 32px;",
      " border-radius: 16px;",
      " border: 1px solid rgba(5, 83, 245, 0.2);",
      "box-sizing: border-box;",
      " background: rgba(255, 255, 255, 1);",
      "display: flex;",
      "justify-content: center;",
      " align-items: center;",
      " color: rgba(5, 83, 245, 1);",
      " font-family: Alibaba PuHuiTi;",
      "font-size: 14px;",
      "}",
      "  .main_content_chart {",
      " flex: 1;",
      " border-radius: 0px 0px 10px 10px;",
      " }",
      " }",
      "  </style>",
    ],
    "description": "Log output to console"
  }
}
